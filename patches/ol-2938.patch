diff --git lib/OpenLayers/Filter/Comparison.js lib/OpenLayers/Filter/Comparison.js
index efab2c0..d37f642 100644
--- lib/OpenLayers/Filter/Comparison.js
+++ lib/OpenLayers/Filter/Comparison.js
@@ -114,6 +114,9 @@ OpenLayers.Filter.Comparison = OpenLayers.Class(OpenLayers.Filter, {
         }
         var result = false;
         var got = context[this.property];
+        if (got === undefined) {
+            return false;
+        }
         var exp;
         switch(this.type) {
             case OpenLayers.Filter.Comparison.EQUAL_TO:
diff --git tests/Filter/Comparison.html tests/Filter/Comparison.html
index a0c2da3..524b6dc 100644
--- tests/Filter/Comparison.html
+++ tests/Filter/Comparison.html
@@ -164,6 +164,22 @@
             }),
             context: {prop: "FOO"},
             expect: false
+        }, {
+            filter: new OpenLayers.Filter.Comparison({
+                type: OpenLayers.Filter.Comparison.LIKE,
+                property: "prop",
+                value: ".+"
+            }),
+            context: {prop: "FOO"},
+            expect: true
+        }, {
+            filter: new OpenLayers.Filter.Comparison({
+                type: OpenLayers.Filter.Comparison.LIKE,
+                property: "prop",
+                value: ".+"
+            }),
+            context: {},
+            expect: false
         }];
         
         t.plan(cases.length);
@@ -274,6 +290,22 @@
             }),
             context: new OpenLayers.Feature.Vector(null, {prop: "FOO"}),
             expect: false
+        }, {
+            filter: new OpenLayers.Filter.Comparison({
+                type: OpenLayers.Filter.Comparison.LIKE,
+                property: "prop",
+                value: ".+"
+            }),
+            context: new OpenLayers.Feature.Vector(null, {prop: "FOO"}),
+            expect: true
+        }, {
+            filter: new OpenLayers.Filter.Comparison({
+                type: OpenLayers.Filter.Comparison.LIKE,
+                property: "prop",
+                value: ".+"
+            }),
+            context: new OpenLayers.Feature.Vector(null, {}),
+            expect: false
         }];
         
         t.plan(cases.length);
